<?php

// Задача 3. Дан код. Что он выведет на каждом шаге? Почему?
// class A {
//     public function foo() {
//         static $x = 0;
//         echo ++$x;
//     }
// }
// $a1 = new A();
// $a2 = new A();
// $a1->foo(); // Выведет 1 
// $a2->foo(); // Выведет 2
// $a1->foo(); // Выведет 3
// $a2->foo(); // Выведет 4

//Переменная static $x принадлежит классу, а не конкретному экземпляру класса. Поэтому каждый вызов метода foo() будет ее увеличивать на единицу. 
//++$x - это префиксная форма инкремента, поэтому сначала увеличится на 1, а потом вернется значение.





// Задача 4. Объясните результаты в этом случае.
// class A {
//     public function foo() {
//         static $x = 0;
//         echo ++$x;
//     }
// }
// class B extends A {
// }
// $a1 = new A();
// $b1 = new B();
// $a1->foo(); //Выведет 1
// $b1->foo(); //Выведет 1
// $a1->foo(); //Выведет 2
// $b1->foo(); //Выведет 2

// Класс B наследуется от класса А ,но это другой класс, у которого будут свои переменные (переменная static $x у каждого класса будет указывать на свой класс), хоть метод foo() будет ссылаться на родителя





// Задача 5. *Дан код. Что он выведет на каждом шаге? Почему?
// class A {
//     public function foo() {
//         static $x = 0;
//         echo ++$x;
//     }
// }
// class B extends A {
// }
// $a1 = new A;
// $b1 = new B;
// $a1->foo(); //Выведет 1
// $b1->foo(); //Выведет 1
// $a1->foo(); //Выведет 2
// $b1->foo(); //Выведет 2

// Будет выводить то же, что и в задаче 4. При создании экземпляра класса, если нет конструктора (когда мы не передаем никакие параметры извне в класс), скобки можно не писать